(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const u of r.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&s(u)}).observe(document,{childList:!0,subtree:!0});function a(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(t){if(t.ep)return;t.ep=!0;const r=a(t);fetch(t.href,r)}})();const l={TASKS:"tasks",THEME:"theme"},o={DARK:"theme-dark",LIGHT:"theme-light"};function d(e,n){localStorage.setItem(e,JSON.stringify(n))}function m(e){const n=localStorage.getItem(e);try{return JSON.parse(n)}catch(a){return console.log(a),n}}let c=m(l.TASKS)||[],h=m(l.THEME);function p(e){return e.map(n=>`<li class="task-list-item" data-id="${n.id}">
      <div class="wrapper"><span class="date-of-creation">Created: ${n.createdAt}</span>
      <button class="task-list-item-btn">Delete</button></div>
      <h3>${n.title}</h3>
      <p>${n.text}</p>
  </li>`).join("")}const i={list:document.querySelector(".tasks-list"),form:document.getElementById("task-form"),changeThemeBtn:document.querySelector("#themeToggle"),body:document.querySelector("body")};function f(e){i.list.innerHTML=p(e)}function g(e){return e.toLocaleString("he-IL",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"})}function y(e,n){const s=g(new Date);return{title:e,text:n,id:crypto.randomUUID(),createdAt:s}}function T(){i.body.classList.contains(o.DARK)?(i.body.classList.replace(o.DARK,o.LIGHT),d(l.THEME,o.LIGHT)):(i.body.classList.replace(o.LIGHT,o.DARK),d(l.THEME,o.DARK))}function L(e){e&&(i.body.classList.remove(o.DARK,o.DARK),i.body.classList.add(e))}function S(e){e.preventDefault();const{taskName:n,taskDescription:a}=e.target.elements,s=n.value.trim(),t=a.value.trim();if(!s||!t){alert('You must fill in the "Title" and "Description" fields');return}const r=y(s,t);c.push(r),d(l.TASKS,c),f(c),e.target.reset()}function k(e){if(!e.target.classList.contains("task-list-item-btn"))return;const a=e.target.closest(".task-list-item").dataset.id,s=c.findIndex(t=>t.id===a);s!==-1&&(c.splice(s,1),d(l.TASKS,c),f(c))}function D(){f(c),L(h)}function E(){T()}document.addEventListener("DOMContentLoaded",D);i.list.addEventListener("click",k);i.form.addEventListener("submit",S);i.changeThemeBtn.addEventListener("click",E);
//# sourceMappingURL=index.js.map
